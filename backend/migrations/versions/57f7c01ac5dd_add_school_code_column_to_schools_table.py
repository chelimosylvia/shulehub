"""Add school_code column to schools table

Revision ID: 57f7c01ac5dd
Revises: 52ec0ea51df7
Create Date: 2025-06-12 11:36:05.468309

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '57f7c01ac5dd'
down_revision = '52ec0ea51df7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('school_classes')
    op.drop_table('enrollments')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_email')

    op.drop_table('users')
    op.drop_table('notifications')
    op.drop_table('attendance_records')
    op.drop_table('classroom_sessions')
    op.drop_table('assessments')
    op.drop_table('schools')
    op.drop_table('grade_entries')
    op.drop_table('chat_messages')
    op.drop_table('assessment_results')
    op.drop_table('resources')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resources',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resource_type', postgresql.ENUM('notes', 'book', 'video', 'audio', 'other', name='resource_types'), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name='resources_school_id_fkey'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name='resources_uploaded_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='resources_pkey')
    )
    op.create_table('assessment_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('assessment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('recorded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], name='assessment_results_assessment_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='assessment_results_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assessment_results_pkey')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='chat_messages_sender_id_fkey'),
    sa.ForeignKeyConstraint(['session_id'], ['classroom_sessions.id'], name='chat_messages_session_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_table('grade_entries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('grade', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('recorded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['school_classes.id'], name='grade_entries_class_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='grade_entries_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='grade_entries_pkey')
    )
    op.create_table('schools',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('schools_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=300), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('established_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('school_type', postgresql.ENUM('public', 'private', 'international', name='school_types'), autoincrement=False, nullable=False),
    sa.Column('county', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('registration_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('level', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='schools_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='schools_pkey'),
    sa.UniqueConstraint('email', name='schools_email_key'),
    sa.UniqueConstraint('registration_number', name='schools_registration_number_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('assessments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('max_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('exam_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['school_classes.id'], name='assessments_class_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='assessments_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='assessments_pkey')
    )
    op.create_table('classroom_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['school_classes.id'], name='classroom_sessions_class_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='classroom_sessions_created_by_fkey'),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name='classroom_sessions_school_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='classroom_sessions_pkey')
    )
    op.create_table('attendance_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('present', 'absent', 'late', 'excused', name='attendance_status'), autoincrement=False, nullable=True),
    sa.Column('remarks', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('recorded_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['school_classes.id'], name='attendance_records_class_id_fkey'),
    sa.ForeignKeyConstraint(['recorded_by'], ['users.id'], name='attendance_records_recorded_by_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='attendance_records_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attendance_records_pkey')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('student', 'teacher', 'admin', name='user_roles'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_users_email', ['email'], unique=True)

    op.create_table('enrollments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('admission_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('enrollment_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'inactive', 'graduated', 'transferred', name='enrollment_status'), autoincrement=False, nullable=True),
    sa.Column('academic_year', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['school_classes.id'], name='enrollments_class_id_fkey'),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name='enrollments_school_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='enrollments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enrollments_pkey'),
    sa.UniqueConstraint('admission_number', name='enrollments_admission_number_key'),
    sa.UniqueConstraint('user_id', 'school_id', 'academic_year', name='unique_user_school_year')
    )
    op.create_table('school_classes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('level', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('stream', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name='school_classes_school_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='school_classes_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='school_classes_pkey')
    )
    # ### end Alembic commands ###
